rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    function authorizedUser() {
      return request.auth != null && ( 
          request.auth.token.email.matches(".*@ff-neusiedlamsee.at") || 
          get(/databases/$(database)/documents/user/$(request.auth.uid)).data.authorized in [true, 'on', 'yes', 'y']
        );
    }
    
    function adminUser() {
      return request.auth != null && 
      get(/databases/$(database)/documents/user/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /hydrant/{doc=*} {
      allow read: if authorizedUser()
    }
    match /saugstelle/{doc=*} {
      allow read: if authorizedUser()
    }
    match /loeschteich/{doc=*} {
      allow read: if authorizedUser()
    }
    match /risikoobjekt/{doc=*} {
      allow read: if authorizedUser()
    }
    
    match /gefahrobjekt/{doc=*} {
      allow read: if authorizedUser()
    }

    match /call/{doc=**} {
      allow read, write: if authorizedUser() 
            && resource.data.group in get(/databases/$(database)/documents/user/$(request.auth.uid)).data.groups 
    }
    
    match /clusters/{doc=**} {
      allow read: if authorizedUser();
    }

    match /clusters6/{doc=**} {
      allow read: if authorizedUser();
      allow write: if adminUser();
    }

    match /tokens/{doc=**} {
        allow read: if authorizedUser() && request.auth.uid == resource.data.owner;
        allow delete: if authorizedUser() && request.auth.uid == resource.data.owner;
        allow write: if authorizedUser() && request.auth.uid == request.resource.data.owner;
    }

    match /user/{doc=*} {
      allow read: if request.auth != null && request.auth.uid == doc
    }

    match /{document=**} {
      allow read, write: if adminUser();
    }
    
  }
}