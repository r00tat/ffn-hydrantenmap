rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    function authorizedUser() {
  	  return request.auth != null && ( request.auth.token.email.matches(".*@ff-neusiedlamsee.at") || get(/databases/$(database)/documents/user/$(request.auth.uid)).data.authorized == true);
    }
    
    function adminUser() {
  	  return request.auth != null && request.auth.token.email == "paul.woelfel@ff-neusiedlamsee.at";
    }
    
  	match /hydrant/{doc=*} {
    	allow read
    }
    match /saugstelle/{doc=*} {
    	allow read
    }
    match /loeschteich/{doc=*} {
    	allow read
    }
    match /risikoobjekt/{doc=*} {
    	allow read: if authorizedUser()
    }
    
    match /gefahrobjekt/{doc=*} {
    	allow read: if authorizedUser()
    }

    match /call/{doc=**} {
    	allow read, write: if authorizedUser()
    }
    
    match /clusters/{doc=**} {
    	allow read: if authorizedUser();
    }

    match /clusters6/{doc=**} {
    	allow read: if authorizedUser();
    }

    match /tokens/{doc=**} {
        allow read: if authorizedUser() && request.auth.uid == resource.data.owner;
        allow delete: if authorizedUser() && request.auth.uid == resource.data.owner;
        allow write: if authorizedUser() && request.auth.uid == request.resource.data.owner;
    }


	match /user/{doc=*} {
    	allow read: if  request.auth != null && request.auth.uid == doc
    }

    match /{document=**} {
      allow read, write: if adminUser();
    }
    
  }
}